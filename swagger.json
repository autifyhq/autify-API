{
  "openapi": "3.0.0",
  "info": {
    "title": "Autify API",
    "version": "v1",
    "description": "## 認証\nパーソナルアクセストークンを使用して、Bearerヘッダーに渡すことでAPIを認証できます。 APIキーを生成または管理するには、[アカウントページ](https://app.autify.com/settings/tokens)にアクセスしてください。\n\n個人用アクセストークンをヘッダーに使用する例：\n```\ncurl -H \"Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN\" https://app.autify.com/api/v1/\n```\n\n認証情報が無効または省略された場合、エラーメッセージがステータスコード401とともに返されます：\n```\n{\n  \"errors\":[{\n    \"message\": \"Bad credentials\"\n  }]\n}\n```\n"
  },
  "servers": [
    {
      "url": "https://app.autify.com/api/v1/",
      "description": "Production server"
    }
  ],
  "paths": {
    "/schedules/{id}": {
      "post": {
        "tags": [
          "schedule"
        ],
        "security": [
          {
            "bearerAuth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TestPlanResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/scenarios": {
      "get": {
        "tags": [
          "scenario"
        ],
        "security": [
          {
            "bearerAuth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "The number of page returns."
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Story"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/scenarios/{id}": {
      "get": {
        "tags": [
          "scenario"
        ],
        "security": [
          {
            "bearerAuth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Story"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/resutls": {
      "get": {
        "tags": [
          "result"
        ],
        "security": [
          {
            "bearerAuth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "The number of page returns."
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 30
            },
            "description": "The number of items returns. Default number is 30 and up to a maximum of 100"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TestPlanResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/results/{id}": {
      "get": {
        "tags": [
          "result"
        ],
        "security": [
          {
            "bearerAuth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "waiting",
                        "running",
                        "passed",
                        "failed",
                        "skipped"
                      ],
                      "default": "waiting"
                    },
                    "duration": {
                      "type": "integer"
                    },
                    "started_at": {
                      "type": "string"
                    },
                    "finished_at": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "test_plan_capability_results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "capability": {
                            "$ref": "#/components/schemas/Capability"
                          },
                          "test_case_results": {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/TestCaseResult"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "http"
      }
    },
    "schemas": {
      "Story": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        }
      },
      "Capability": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "os": {
            "type": "string"
          },
          "os_version": {
            "type": "string"
          },
          "browser": {
            "type": "string"
          },
          "browser_version": {
            "type": "string"
          },
          "device": {
            "type": "string"
          },
          "resolution": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        }
      },
      "TestPlan": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "TestPlanResult": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "status": {
            "type": "string",
            "enum": [
              "waiting",
              "running",
              "passed",
              "failed",
              "skipped"
            ],
            "default": "waiting"
          },
          "duration": {
            "type": "integer"
          },
          "started_at": {
            "type": "string"
          },
          "finished_at": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        }
      },
      "TestPlanCapabilityResult": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "status": {
            "type": "string",
            "enum": [
              "waiting",
              "running",
              "passed",
              "failed",
              "skipped"
            ],
            "default": "waiting"
          },
          "duration": {
            "type": "integer"
          },
          "started_at": {
            "type": "string"
          },
          "finished_at": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        }
      },
      "TestCaseResult": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "status": {
            "type": "string",
            "enum": [
              "waiting",
              "running",
              "passed",
              "failed",
              "skipped"
            ],
            "default": "waiting"
          },
          "duration": {
            "type": "integer"
          },
          "started_at": {
            "type": "string"
          },
          "finished_at": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        }
      }
    }
  }
}
